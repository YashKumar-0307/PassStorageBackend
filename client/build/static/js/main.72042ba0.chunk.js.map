{"version":3,"sources":["Nav.js","Signin.js","Register.js","displaydta.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Nav","isSignedIn","onCatChange","onRouteChange","style","display","justifyContent","className","onClick","Signin","props","onEmailChange","event","setState","email","target","value","onPasswordChange","password","onSignIn","fetch","method","headers","body","JSON","stringify","state","then","response","json","user","_id","loadUser","onButtonSubmit","alert","catch","err","console","log","this","id","htmlFor","type","name","onChange","React","Component","bcrypt","require","Register","onNameChange","onRegister","hashSync","data","loginset","Displaydta","condit","pass","Home","onPlatformChange","platform","onSearPlatformChange","searplat","onIdChange","userid","clearData","clearData1","onSubmitEntry","resp","registered","onSearchEntry","searfound","searuserid","searpass","keyss","cat","particlesOptions","particles","number","density","enable","value_area","App","route","params","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.72042ba0.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst Nav = ({isSignedIn,onCatChange,onRouteChange}) => {\r\nif ( isSignedIn === true)\r\nreturn(\r\n<nav style ={{display:\"flex\", justifyContent: 'flex center'}}>\r\n    <p className = 'f3 link dim black underline pa3 pointer mr1' onClick = {() => onCatChange('newentry')}>New Entry</p>\r\n    <p className = 'f3 link dim black underline pa3 pointer mr-auto' onClick = {() => onCatChange('search')}>Search</p>\r\n    <p className = 'f3 link dim black underline pa3 pointer ml-auto'  onClick = {() => onRouteChange('signout')}>Sign Out</p>\r\n</nav>\r\n);\r\nelse\r\nreturn(\r\n    <nav style ={{display:\"flex\", justifyContent: 'flex center'}}>\r\n        <p className = 'f3 link dim black underline pa3 pointer ml-auto mr1' onClick = {() => onRouteChange('signin')}>Sign In</p>\r\n        <p className = 'f3 link dim black underline pa3 pointer' onClick = {() => onRouteChange('register')}>Register</p>\r\n    </nav>\r\n    );}\r\nexport default Nav;","import React from 'react';\r\n//const bcrypt = require('bcrypt-nodejs');\r\n//const cors = require('cors');\r\n//const Cryptr = require('cryptr');\r\n//const cryptr = new Cryptr(/*this.state.ckey*/'asgdxv');\r\nclass Signin extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      email : '',\r\n      password : '',\r\n  //    ckey : ''\r\n    }\r\n  }\r\n\r\n // chshkey = () =>{\r\n   // fetch('http://localhost:3001/')\r\n //   .then(response => response.json())\r\n   // .then((data)=>{\r\n //     this.setState({ckey : data[0]});\r\n   // })\r\n  //}\r\n\r\n  \r\n\r\n  onEmailChange = (event) =>{\r\n    this.setState({email : event.target.value});\r\n  }\r\n\r\n  onPasswordChange = (event) =>{\r\n    this.setState({password : event.target.value});\r\n  }\r\n\r\n  onSignIn = () =>{ \r\n  //  this.chshkey;\r\n    //this.setState({password : cryptr.encrypt(this.state.password)})\r\n    fetch('http://passstoragebackend-env.eba-rgjm6pje.ap-south-1.elasticbeanstalk.com/signin',{\r\n    //fetch('http://pass-storage.herokuapp.com/signin',{\r\n      method : 'post',\r\n      headers : {'Content-Type' : 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password : this.state.password,\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(user => {\r\n    //  this.setState({ckey : ''});\r\n      if(user._id)\r\n      {\r\n        this.props.loadUser(user);\r\n        this.props.onButtonSubmit();\r\n      }\r\n      else\r\n      {\r\n        alert(' Wrong username/password');\r\n      }\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">UserID</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange = {this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign in\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\" >\r\n              <p  className=\"f6 link dim black db pointer\" onClick={() => onRouteChange ('register')} >Register</p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\nexport default Signin;","import React from 'react';\r\nconst bcrypt = require('bcrypt-nodejs');\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      email : '',\r\n      password : '',\r\n      name : '',\r\n    }\r\n    }\r\n\r\n  onEmailChange = (event) =>{\r\n    this.setState({email : event.target.value});\r\n  }\r\n\r\n  onNameChange = (event) =>{\r\n    this.setState({name : event.target.value});\r\n  }\r\n\r\n  onPasswordChange = (event) =>{\r\n    this.setState({password : event.target.value});\r\n  }\r\n\r\n  onRegister = () =>{\r\n    const {loadUser, onButtonSubmit} = this.props;\r\n     fetch('http://passstoragebackend-env.eba-rgjm6pje.ap-south-1.elasticbeanstalk.com/register',{\r\n    //fetch('http://pass-storage.herokuapp.com/register',{\r\n      method : 'post',\r\n      headers : {'Content-Type' : 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password : bcrypt.hashSync(this.state.password),\r\n        name: this.state.name\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if(data.loginset._id)\r\n        {\r\n          loadUser(data.loginset);\r\n          onButtonSubmit();\r\n        }\r\n      else{\r\n        alert(\"UserID taken! Please use another id\");\r\n      }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.onNameChange}\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">UserID</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  value={this.state.email}\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  value={this.state.password}\r\n                  onChange = {this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n                onClick={this.onRegister}\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nconst Displaydta = ({condit,id,pass}) =>{\r\nif(condit === true)\r\n{\r\nreturn(<div className ='ba db'>\r\n<p className =''>Userid : {id}</p>\r\n<p className =''>Password : {pass}</p>\r\n</div>);\r\n}\r\nelse\r\nreturn null;\r\n}\r\n\r\nexport default Displaydta;","import Displaydta from './displaydta.js';\r\nimport React from 'react';\r\nimport './home.css';\r\n//const Cryptr = require('cryptr');\r\n//const cryptr = new Cryptr('myTotalySecretKey');\r\n\r\nclass Home extends React.Component {\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state={\r\n      id:this.props.id,\r\n      platform: '',\r\n      userid:'',\r\n      password:'',\r\n      searplat:'',\r\n      searuserid:'',\r\n      searpass:'',\r\n      searfound:false,\r\n    }\r\n  }\r\n\r\n  onPlatformChange = (event) =>{\r\n    this.setState({platform  : event.target.value});\r\n  }\r\n\r\n  onSearPlatformChange = (event) =>{\r\n    this.setState({searplat  : event.target.value});\r\n    //console.log(event.target.value);\r\n  }\r\n\r\n  onIdChange = (event) =>{\r\n    this.setState({userid : event.target.value});\r\n    //console.log(this.state.userid)\r\n  }\r\n\r\n  onPasswordChange = (event) =>{\r\n    this.setState({password : event.target.value});\r\n  }\r\n\r\n  clearData = () =>{\r\n    this.setState({\r\n      id:this.props.id,\r\n      platform: '',\r\n      userid:'',\r\n      password:''\r\n    });\r\n  }\r\n\r\n  clearData1 = () =>{\r\n    this.setState({\r\n      id:this.props.id,\r\n      searplat:'',\r\n    });\r\n  }\r\n\r\n  onSubmitEntry= () => {\r\n    if(!this.state.platform || !this.state.userid || !this.state.password)\r\n    {\r\n      console.log(\"Empty new entry fields\");\r\n      return;\r\n    }\r\n    fetch('http://passstoragebackend-env.eba-rgjm6pje.ap-south-1.elasticbeanstalk.com/newentry',{\r\n    //fetch('http://pass-storage.herokuapp.com/newentry',{\r\n      method : 'post',\r\n      headers : {'Content-Type' : 'application/json'},\r\n      body: JSON.stringify({\r\n        id : this.state.id,\r\n        platform: this.state.platform,\r\n        userid : this.state.userid,\r\n        password: this.state.password\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then((resp)=>{\r\n      if(resp.registered)\r\n      {\r\n        alert(\"Registered\");\r\n        this.clearData();\r\n      }\r\n      else\r\n      alert(\"Platform Already Exists\");\r\n    })\r\n      .catch(err => {\r\n        //alert(\"Platform already exists\");\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  onSearchEntry= () => {\r\n    if(!this.state.searplat)\r\n    {\r\n      console.log(\"Empty Platform field\");\r\n      return;\r\n    }\r\n    this.setState({searfound: false});\r\n    fetch('http://passstoragebackend-env.eba-rgjm6pje.ap-south-1.elasticbeanstalk.com/getdetails',{\r\n    //fetch('http://pass-storage.herokuapp.com/getdetails',{\r\n      method : 'post',\r\n      headers : {'Content-Type' : 'application/json'},\r\n      body: JSON.stringify({\r\n        id : this.state.id,\r\n        platform: this.state.searplat,\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then((user)=>{\r\n      if(user)\r\n      {\r\n        this.setState({\r\n          searuserid: user.userid,\r\n          searpass: user.keyss,\r\n          searfound: true,\r\n        });\r\n        if(!user.userid)\r\n        {\r\n          this.setState({searfound: false});\r\n        }\r\n        this.clearData1();\r\n      }\r\n      else{\r\n        alert(\"Platform not found\");\r\n      }\r\n    })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  render()\r\n  {\r\n  const {cat} = this.props;\r\n    if(cat === 'newentry')\r\n    {\r\n       return (\r\n      <div>\r\n       <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m mw7 shadow-5 center\">\r\n          <main className=\"w-100 pa4 black-80\">\r\n            <div className=\"\">\r\n              <fieldset id=\"entry\" className=\"center flex ba b--transparent ph0 mh0\">\r\n                <legend className=\"f1 fw6 ph0 mh0\">New Entry</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"text\">Platform</label>\r\n                  <input\r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w10\"\r\n                    type=\"text\"\r\n                    name=\"platform-name-1\"\r\n                    id=\"platform-name-1\"\r\n                    value={this.state.platform}\r\n                    onChange={this.onPlatformChange}\r\n                  />\r\n                </div>\r\n                <div className=\"mt3 ma4\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"text\">User Id</label>\r\n                  <input\r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w10\"\r\n                    type=\"text\"\r\n                    name=\"email-address\"\r\n                    id=\"email-address\"\r\n                    value={this.state.userid}\r\n                    onChange={this.onIdChange}\r\n                  />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w10\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onPasswordChange}\r\n                  />\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"db let w10\">\r\n                <input\r\n                  className=\"mb2 ph3 pv2 input-reset ba b--black bg-transparent pointer f6 dib\"\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  onClick={this.onSubmitEntry}\r\n                />\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n        </div>);\r\n    }\r\n      else if (cat === 'search')\r\n      {\r\n        return(\r\n        <div>\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m mw7 shadow-5 center\">\r\n          <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n              <fieldset id=\"findsigninid\" className=\"flex ba b--transparent ph0 mh0\">\r\n                <legend className=\"f1 fw6 ph0 mh0\">Search</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"text\">Platform</label>\r\n                  <input\r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"text\"\r\n                    name=\"plat-name\"\r\n                    id=\"plat-name\"\r\n                    value={this.state.searplat}\r\n                    onChange={this.onSearPlatformChange}\r\n                  />\r\n                </div>\r\n                </fieldset>\r\n                <div className='db center'>\r\n                {<Displaydta condit={this.state.searfound} id={this.state.searuserid} pass={this.state.searpass}/>}\r\n                <br></br>\r\n                </div>\r\n              <div className=\"\">\r\n                <input\r\n                  className=\"mb2 ph3 pv2 input-reset ba b--black bg-transparent pointer f6 dib\"\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  onClick={this.onSearchEntry}\r\n                />\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n        </div>);\r\n      }\r\n}\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport './App.css';\r\nimport Nav from './Nav.js';\r\nimport 'tachyons';\r\nimport Signin from './Signin.js';\r\nimport Register from './Register.js';\r\nimport Home from './Home.js';\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 60,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nclass App extends Component \r\n{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      route : 'signin',\r\n      isSignedIn : false,\r\n      cat : 'newentry',\r\n      user: {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n      }\r\n    }\r\n  }\r\n\r\n  onButtonSubmit = () =>{\r\n    this.setState({route : 'home'});\r\n    this.setState({isSignedIn: true});\r\n  }\r\n\r\n  onCatChange = (cat) =>{\r\n    this.setState({cat : cat});\r\n  }\r\n\r\n  onRouteChange = (route) =>{\r\n    if(route === 'signout')\r\n    this.setState({isSignedIn: false});\r\n    else if (route === 'home')\r\n    this.setState({isSignedIn: true});\r\n    this.setState({route : route});\r\n  }\r\n\r\n  loadUser = (data) =>{\r\n    this.setState({\r\n      user : {\r\n        id: data._id,\r\n        name: data.name,\r\n        email: data.email,\r\n      }\r\n    })\r\n  }\r\n\r\n  render()\r\n  {\r\n    const {route,isSignedIn,cat} = this.state;\r\n  return (\r\n    <div className=\"App\">\r\n         <Particles className='particles'\r\n          params={particlesOptions}\r\n        />\r\n        <Nav isSignedIn={isSignedIn} onCatChange={this.onCatChange} onRouteChange={this.onRouteChange} />\r\n        {\r\n          route === 'home'?\r\n          <Home id={this.state.user.id} cat = {cat} />  \r\n          :\r\n          route === 'register'?\r\n          <Register loadUser={this.loadUser} onButtonSubmit={this.onButtonSubmit} onRouteChange={this.onRouteChange} />\r\n          :\r\n          <Signin onButtonSubmit={this.onButtonSubmit} onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\r\n        }\r\n    </div>\r\n  );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render( <App /> ,document.getElementById('root') );\r\nserviceWorker.unregister();"],"sourceRoot":""}